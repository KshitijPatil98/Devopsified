name: Devopsify Feature branch Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "feature/*"
jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS version - 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Unit Tests
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: Unit test report
          path: test-reports

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-22.04
    needs: unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS version - 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Code
        run: npm run coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: Coverage report
          path: coverage

  linting:
    name: Linting
    runs-on: ubuntu-22.04
    needs: code-coverage
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup NodeJS version - 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Cache Dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Code
        run: npm run lint

  docker:
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/devopsify:${{ github.sha }}
      - name: Docker image test
        run: |
          docker images
          docker run --name simple-node-app  -d \
              -p 3000:3000 \
               ${{ vars.DOCKERHUB_USERNAME }}/devopsify:${{ github.sha }}
          docker ps
          echo Testing the image
          wget -q -O- http://locahost:3000/live | grep live
          echo $?
